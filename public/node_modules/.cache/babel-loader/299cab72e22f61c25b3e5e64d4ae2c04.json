{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\aiml\\\\FIT\\\\project\\\\chat-app-react-nodejs-master\\\\chat-app-react-nodejs-master\\\\public\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"D:\\\\aiml\\\\FIT\\\\project\\\\chat-app-react-nodejs-master\\\\chat-app-react-nodejs-master\\\\public\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\aiml\\\\FIT\\\\project\\\\chat-app-react-nodejs-master\\\\chat-app-react-nodejs-master\\\\public\\\\src\\\\components\\\\ChatInput.jsx\",\n    _templateObject;\n\nimport React, { useState } from \"react\";\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\nimport { IoMdSend } from \"react-icons/io\";\nimport styled from \"styled-components\";\nimport Picker from \"emoji-picker-react\";\nexport default function ChatInput(_ref) {\n  var handleSendMsg = _ref.handleSendMsg;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      msg = _useState2[0],\n      setMsg = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showEmojiPicker = _useState4[0],\n      setShowEmojiPicker = _useState4[1];\n\n  var handleEmojiPickerhideShow = function handleEmojiPickerhideShow() {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  var handleEmojiClick = function handleEmojiClick(event, emojiObject) {\n    var message = msg;\n    message += emojiObject.emoji;\n    setMsg(message);\n  };\n\n  var sendChat = function sendChat(event) {\n    event.preventDefault();\n\n    if (msg.length > 0) {\n      handleSendMsg(msg);\n      setMsg(\"\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BsEmojiSmileFill, {\n    onClick: handleEmojiPickerhideShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), showEmojiPicker && /*#__PURE__*/React.createElement(Picker, {\n    onEmojiClick: handleEmojiClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 31\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"input-container\",\n    onSubmit: function onSubmit(event) {\n      return sendChat(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"type your message here\",\n    onChange: function onChange(e) {\n      return setMsg(e.target.value);\n    },\n    value: msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IoMdSend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }))));\n}\nvar Container = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: grid;\\n  align-items: center;\\n  grid-template-columns: 5% 95%;\\n  background-color: #080420;\\n  padding: 0 2rem;\\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\\n    padding: 0 1rem;\\n    gap: 1rem;\\n  }\\n  .button-container {\\n    display: flex;\\n    align-items: center;\\n    color: white;\\n    gap: 1rem;\\n    .emoji {\\n      position: relative;\\n      svg {\\n        font-size: 1.5rem;\\n        color: #ffff00c8;\\n        cursor: pointer;\\n      }\\n      .emoji-picker-react {\\n        position: absolute;\\n        top: -350px;\\n        background-color: #080420;\\n        box-shadow: 0 5px 10px #9a86f3;\\n        border-color: #9a86f3;\\n        .emoji-scroll-wrapper::-webkit-scrollbar {\\n          background-color: #080420;\\n          width: 5px;\\n          &-thumb {\\n            background-color: #9a86f3;\\n          }\\n        }\\n        .emoji-categories {\\n          button {\\n            filter: contrast(0);\\n          }\\n        }\\n        .emoji-search {\\n          background-color: transparent;\\n          border-color: #9a86f3;\\n        }\\n        .emoji-group:before {\\n          background-color: #080420;\\n        }\\n      }\\n    }\\n  }\\n  .input-container {\\n    width: 100%;\\n    border-radius: 2rem;\\n    display: flex;\\n    align-items: center;\\n    gap: 2rem;\\n    background-color: #ffffff34;\\n    input {\\n      width: 90%;\\n      height: 60%;\\n      background-color: transparent;\\n      color: white;\\n      border: none;\\n      padding-left: 1rem;\\n      font-size: 1.2rem;\\n\\n      &::selection {\\n        background-color: #9a86f3;\\n      }\\n      &:focus {\\n        outline: none;\\n      }\\n    }\\n    button {\\n      padding: 0.3rem 2rem;\\n      border-radius: 2rem;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      background-color: #9a86f3;\\n      border: none;\\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\\n        padding: 0.3rem 1rem;\\n        svg {\\n          font-size: 1rem;\\n        }\\n      }\\n      svg {\\n        font-size: 2rem;\\n        color: white;\\n      }\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["D:/aiml/FIT/project/chat-app-react-nodejs-master/chat-app-react-nodejs-master/public/src/components/ChatInput.jsx"],"names":["React","useState","BsEmojiSmileFill","IoMdSend","styled","Picker","ChatInput","handleSendMsg","msg","setMsg","showEmojiPicker","setShowEmojiPicker","handleEmojiPickerhideShow","handleEmojiClick","event","emojiObject","message","emoji","sendChat","preventDefault","length","e","target","value","Container","div"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,eAAe,SAASC,SAAT,OAAsC;AAAA,MAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA,kBAC7BN,QAAQ,CAAC,EAAD,CADqB;AAAA;AAAA,MAC5CO,GAD4C;AAAA,MACvCC,MADuC;;AAAA,mBAELR,QAAQ,CAAC,KAAD,CAFH;AAAA;AAAA,MAE5CS,eAF4C;AAAA,MAE3BC,kBAF2B;;AAGnD,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM;AACtCD,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACD,GAFD;;AAIA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAQC,WAAR,EAAwB;AAC/C,QAAIC,OAAO,GAAGR,GAAd;AACAQ,IAAAA,OAAO,IAAID,WAAW,CAACE,KAAvB;AACAR,IAAAA,MAAM,CAACO,OAAD,CAAN;AACD,GAJD;;AAMA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAACJ,KAAD,EAAW;AAC1BA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAIX,GAAG,CAACY,MAAJ,GAAa,CAAjB,EAAoB;AAClBb,MAAAA,aAAa,CAACC,GAAD,CAAb;AACAC,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,GAND;;AAQA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEG,yBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGF,eAAe,iBAAI,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAEG,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFtB,CADF,CADF,eAOE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,aAAWI,QAAQ,CAACJ,KAAD,CAAnB;AAAA,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,wBAFd;AAGE,IAAA,QAAQ,EAAE,kBAACO,CAAD;AAAA,aAAOZ,MAAM,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAAA,KAHZ;AAIE,IAAA,KAAK,EAAEf,GAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CAPF,CADF;AAqBD;AAED,IAAMgB,SAAS,GAAGpB,MAAM,CAACqB,GAAV,6oEAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\nimport { IoMdSend } from \"react-icons/io\";\nimport styled from \"styled-components\";\nimport Picker from \"emoji-picker-react\";\n\nexport default function ChatInput({ handleSendMsg }) {\n  const [msg, setMsg] = useState(\"\");\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const handleEmojiPickerhideShow = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  const handleEmojiClick = (event, emojiObject) => {\n    let message = msg;\n    message += emojiObject.emoji;\n    setMsg(message);\n  };\n\n  const sendChat = (event) => {\n    event.preventDefault();\n    if (msg.length > 0) {\n      handleSendMsg(msg);\n      setMsg(\"\");\n    }\n  };\n\n  return (\n    <Container>\n      <div className=\"button-container\">\n        <div className=\"emoji\">\n          <BsEmojiSmileFill onClick={handleEmojiPickerhideShow} />\n          {showEmojiPicker && <Picker onEmojiClick={handleEmojiClick} />}\n        </div>\n      </div>\n      <form className=\"input-container\" onSubmit={(event) => sendChat(event)}>\n        <input\n          type=\"text\"\n          placeholder=\"type your message here\"\n          onChange={(e) => setMsg(e.target.value)}\n          value={msg}\n        />\n        <button type=\"submit\">\n          <IoMdSend />\n        </button>\n      </form>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: 5% 95%;\n  background-color: #080420;\n  padding: 0 2rem;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    padding: 0 1rem;\n    gap: 1rem;\n  }\n  .button-container {\n    display: flex;\n    align-items: center;\n    color: white;\n    gap: 1rem;\n    .emoji {\n      position: relative;\n      svg {\n        font-size: 1.5rem;\n        color: #ffff00c8;\n        cursor: pointer;\n      }\n      .emoji-picker-react {\n        position: absolute;\n        top: -350px;\n        background-color: #080420;\n        box-shadow: 0 5px 10px #9a86f3;\n        border-color: #9a86f3;\n        .emoji-scroll-wrapper::-webkit-scrollbar {\n          background-color: #080420;\n          width: 5px;\n          &-thumb {\n            background-color: #9a86f3;\n          }\n        }\n        .emoji-categories {\n          button {\n            filter: contrast(0);\n          }\n        }\n        .emoji-search {\n          background-color: transparent;\n          border-color: #9a86f3;\n        }\n        .emoji-group:before {\n          background-color: #080420;\n        }\n      }\n    }\n  }\n  .input-container {\n    width: 100%;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n    background-color: #ffffff34;\n    input {\n      width: 90%;\n      height: 60%;\n      background-color: transparent;\n      color: white;\n      border: none;\n      padding-left: 1rem;\n      font-size: 1.2rem;\n\n      &::selection {\n        background-color: #9a86f3;\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n    button {\n      padding: 0.3rem 2rem;\n      border-radius: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #9a86f3;\n      border: none;\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\n        padding: 0.3rem 1rem;\n        svg {\n          font-size: 1rem;\n        }\n      }\n      svg {\n        font-size: 2rem;\n        color: white;\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}